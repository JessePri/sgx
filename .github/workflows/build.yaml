name: rust

on:
  push:
    branches:
      - 'main'
  pull_request:

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"

jobs:
  rustfmt:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Setup rust toolchain
        run: rustup show
      - run: cargo fmt --all -- --check
  markdown-lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: xt0rted/markdownlint-problem-matcher@v1
      - name: Install markdown lint
        run: npm install -g markdownlint-cli@0.32.1
      - run: markdownlint --disable 'MD013' "**/*.md"

  deny:
    runs-on: ubuntu-20.04
    needs:
      - "rustfmt"
      - "markdown-lint"
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources
    # Prevent sudden announcement of a new advisory from failing ci:
    continue-on-error: ${{ matrix.checks == 'advisories' }}
    steps:
    - uses: actions/checkout@v2
    - uses: EmbarkStudios/cargo-deny-action@v1
      with:
        command: check ${{ matrix.checks }}

  clippy:
    runs-on: ubuntu-20.04
    needs:
      - "rustfmt"
      - "markdown-lint"
    steps:
      - uses: actions/checkout@v3
      - name: Setup rust toolchain
        run: rustup show
      - uses: ./.github/actions/dcap-libs
      - run: cargo clippy --all --all-features --locked -- -D warnings
  nono:
    runs-on: ubuntu-20.04
    needs:
      - "rustfmt"
      - "markdown-lint"
    steps:
      - uses: actions/checkout@v3
      - name: Setup rust toolchain
        run: rustup show
      - name: install nono
        run: cargo install cargo-nono
      # `mc-sgx-quote-verify` should be `no_std`, but it isn't yet.  See #34
      # `mc-sgx-core-types` should be `no_std`, but cargo nono doesn't parse
      # rand_core correctly, see https://github.com/hobofan/cargo-nono/pull/64
      # for a suggested improvement
      - run: |
          cargo metadata --no-deps --format-version=1 | \
            jq -r '.packages[].name' | \
            grep -v -e mc-sgx-capable - mc-sgx-capable-sys -e mc-sgx-core-build -e mc-sgx-core-types -e mc-sgx-dcap-quoteverify-sys -e mc-sgx-dcap-ql-sys -e mc-sgx-quote-verify -e mc-sgx-urts | \
            xargs -n1 sh -c 'cargo nono check --package $0 || exit 255'
  build:
    runs-on: ubuntu-20.04
    needs:
      - "rustfmt"
      - "markdown-lint"
    steps:
      - uses: actions/checkout@v3
      - name: Setup rust toolchain
        run: rustup show
      - uses: ./.github/actions/sgxsdk
      - uses: ./.github/actions/dcap-libs
      - run: cargo build --release --locked
  test:
    runs-on: ubuntu-20.04
    needs:
      - "rustfmt"
      - "markdown-lint"
    steps:
      - uses: actions/checkout@v3
      - name: Setup rust toolchain
        run: rustup show
      - uses: ./.github/actions/sgxsdk
      - uses: ./.github/actions/dcap-libs
      - run:
          cargo test --release --locked --features sim
  doc:
    runs-on: ubuntu-20.04
    needs:
      - "rustfmt"
      - "markdown-lint"
    steps:
      - uses: actions/checkout@v3
      - name: Setup rust toolchain
        run: rustup show
      - uses: ./.github/actions/dcap-libs
      - run: cargo doc --release --locked --no-deps --features sim

  notify:
    runs-on: ubuntu-latest
    if: failure()
    needs:
      - rustfmt
      - clippy
      - nono
      - markdown-lint
      - build
      - test
      - doc
    steps:
      - name: Notify Discord on failure
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
