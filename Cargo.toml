[workspace]
members = [
    "capable",
    "capable/sys",
    "capable/sys/types",
    "capable/types",
    "core/build",
    "core/sys/types",
    "core/types",
    "dcap/ql",
    "dcap/ql/sys",
    "dcap/ql/sys/types",
    "dcap/ql/types",
    "dcap/quoteverify",
    "dcap/quoteverify/sys",
    "dcap/quoteverify/sys/types",
    "dcap/quoteverify/types",
    "dcap/sys/types",
    "dcap/tvl/sys",
    "dcap/types",
    "tcrypto/sys",
    "tcrypto/sys/types",
    "trts",
    "trts/sys",
    "tservice",
    "tservice/sys",
    "tservice/sys/types",
    "tservice/types",
    "tstdc/sys",
    "tstdc/sys/types",
    "urts",
    "urts/sys",
    "urts/sys/types",
    "util",
]
exclude = [
    "test_enclave",
]

[profile.dev]
opt-level = 0
lto = true

[profile.release]
opt-level = 3
rpath = false
lto = true
debug-assertions = false
overflow-checks = false

[workspace.metadata.release]
shared-version = true
dev-version-ext = "beta.0"
consolidate-commits = true
consolidate-pushes = true
tag-name = "v{{version}}"

# The file names in this key are relative to the each crate that gets released.
# So we only need one `README.md` entry if all the README's follow a
# common format and are always next to the Cargo.toml for their respective
# package.
# The downside to this running relative is that updating anything *only* in the
# root will fail to work around this we delegate to `core/build/Cargo.toml` for
# anything that is root specific.
pre-release-replacements = [
    {file="README.md", search="mc-sgx-[a-z-]+/[0-9.]+", replace="{{crate_name}}/{{version}}"},
]
